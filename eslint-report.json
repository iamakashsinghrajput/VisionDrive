[{"filePath":"/Users/akashsingh/visiondrive/src/app/about/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/account/bookings/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/account/layout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/account/settings/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/api/auth/[...nextauth]/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/api/auth/page.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'motion' is defined but never used.","line":163,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":163,"endColumn":16},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'err' is defined but never used.","line":203,"column":18,"nodeType":null,"messageId":"unusedVar","endLine":203,"endColumn":21},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'err' is defined but never used.","line":231,"column":18,"nodeType":null,"messageId":"unusedVar","endLine":231,"endColumn":21}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// // src/app/verify-otp/page.tsx\n\n// \"use client\";\n\n// import { useState, useEffect, Suspense } from 'react';\n// import Link from 'next/link';\n// import { useRouter, useSearchParams } from 'next/navigation';\n// import { motion } from 'framer-motion';\n// import { KeyRound } from 'lucide-react';\n\n// function VerifyOtpComponent() {\n//     const router = useRouter();\n//     const searchParams = useSearchParams();\n//     const email = searchParams.get('email');\n\n//     const [otp, setOtp] = useState('');\n//     const [loading, setLoading] = useState(false);\n//     const [resendLoading, setResendLoading] = useState(false);\n//     const [error, setError] = useState('');\n//     const [successMessage, setSuccessMessage] = useState('');\n    \n//     useEffect(() => {\n//         if (!email) {\n//             router.push('/signup');\n//         }\n//     }, [email, router]);\n\n//     const handleVerify = async (e: React.FormEvent) => {\n//         e.preventDefault();\n//         setLoading(true);\n//         setError('');\n//         setSuccessMessage('');\n\n//         try {\n//             const res = await fetch('/api/auth/verify-otp', {\n//                 method: 'POST',\n//                 headers: { 'Content-Type': 'application/json' },\n//                 body: JSON.stringify({ email, otp }),\n//             });\n\n//             if (res.ok) {\n//                 router.push('/signin?status=verified');\n//             } else {\n//                 const data = await res.json();\n//                 setError(data.message || 'Invalid OTP or it has expired.');\n//             }\n//         } catch (err) {\n//             setError('Failed to connect to the server.');\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const handleResendOtp = async () => {\n//         if (!email) return;\n\n//         setResendLoading(true);\n//         setError('');\n//         setSuccessMessage('');\n\n//         try {\n//             const res = await fetch('/api/auth/register', {\n//                 method: 'POST',\n//                 headers: { 'Content-Type': 'application/json' },\n//                 body: JSON.stringify({ \n//                     email, \n//                     firstName: 'User', // Dummy value to pass validation\n//                     lastName: 'Resend', // Dummy value to pass validation\n//                     password: 'dummyPassword123' // Dummy value to pass validation\n//                 }),\n//             });\n\n//             if (res.ok) {\n//                 setSuccessMessage('A new verification code has been sent.');\n//             } else {\n//                 const data = await res.json();\n//                 setError(data.message || 'Failed to send a new code.');\n//             }\n//         } catch (err) {\n//             setError('Failed to connect to the server.');\n//         } finally {\n//             setResendLoading(false);\n//         }\n//     };\n    \n//     if (!email) return null;\n\n//     return (\n//         <div className=\"min-h-screen w-full grid grid-cols-1 lg:grid-cols-2 bg-zinc-900\">\n//              <div className=\"flex flex-col justify-center items-center p-8\">\n//                 <div className=\"w-full max-w-sm\">\n//                      <Link href=\"/\" className=\"flex justify-center mb-8\">\n//                         <h1 className=\"text-3xl font-bold tracking-wider text-gray-300\">\n//                             VISION<span className=\"text-cyan-400\">DRIVE</span>\n//                         </h1>\n//                     </Link>\n\n//                     <div className=\"text-center mb-8\">\n//                         <h2 className=\"text-2xl font-bold text-white\">Check Your Email</h2>\n//                         <p className=\"text-gray-400 mt-2\">\n//                            We&apos;ve sent a 6-digit code to <br/> <span className=\"font-semibold text-white\">{email}</span>.\n//                         </p>\n//                     </div>\n                    \n//                      <form onSubmit={handleVerify} className=\"space-y-4\">\n//                         <div className=\"relative\">\n//                             <KeyRound className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-gray-400\" />\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"otp\"\n//                                 placeholder=\"------\"\n//                                 value={otp}\n//                                 onChange={(e) => setOtp(e.target.value.replace(/[^0-9]/g, ''))}\n//                                 required\n//                                 maxLength={6}\n//                                 className=\"input-field pl-10 text-center text-lg tracking-[0.5em] font-mono\"\n//                             />\n//                         </div>\n\n//                         <motion.button type=\"submit\" disabled={loading} className=\"w-full bg-cyan-400 text-black font-bold py-3 rounded-lg hover:bg-cyan-500 transition-colors disabled:opacity-50\">\n//                             {loading ? \"Verifying...\" : \"Verify Account\"}\n//                         </motion.button>\n//                      </form>\n\n//                      {error && <p className=\"text-red-500 text-sm text-center pt-4\">{error}</p>}\n//                      {successMessage && <p className=\"text-green-500 text-sm text-center pt-4\">{successMessage}</p>}\n                     \n//                      <div className=\"text-center mt-6\">\n//                         <p className=\"text-sm text-gray-400\">\n//                             Didn't get a code?{\" \"}\n//                             <button onClick={handleResendOtp} disabled={resendLoading} className=\"font-semibold text-cyan-400 hover:underline disabled:opacity-50 disabled:cursor-wait\">\n//                                 {resendLoading ? 'Sending...' : 'Resend'}\n//                             </button>\n//                         </p>\n//                      </div>\n//                 </div>\n//             </div>\n\n//             <div className=\"hidden lg:block relative overflow-hidden\">\n//                 <video src=\"/auth-video.mp4\" autoPlay loop muted playsInline className=\"absolute top-0 left-0 w-full h-full object-cover\"/>\n//                 <div className=\"absolute inset-0 bg-gradient-to-r from-zinc-900 via-zinc-900/70 to-black/30\" />\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default function VerifyOtpPage() {\n//     return (\n//         <Suspense fallback={<div className=\"h-screen w-full bg-black\" />}>\n//             <VerifyOtpComponent />\n//         </Suspense>\n//     );\n// }\n\n\n// src/app/verify-otp/page.tsx\n\"use client\";\n\nimport { useState, useEffect, Suspense } from 'react';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { motion } from 'framer-motion';\nimport { ArrowLeft, KeyRound } from 'lucide-react';\n\n// Wrapper to use Suspense\nfunction VerifyOtpComponent() {\n    const router = useRouter();\n    const searchParams = useSearchParams();\n    const email = searchParams.get('email');\n\n    const [otp, setOtp] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [resendLoading, setResendLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n    \n    useEffect(() => {\n        if (!email) {\n            router.push('/signup');\n        }\n    }, [email, router]);\n\n    const handleVerify = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setLoading(true);\n        setError('');\n        setSuccessMessage('');\n\n        try {\n            const res = await fetch('/api/auth/verify-otp', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ email, otp }),\n            });\n\n            if (res.ok) {\n                router.push('/signin?status=verified');\n            } else {\n                const data = await res.json();\n                setError(data.message || 'Invalid OTP or it has expired.');\n            }\n        } catch (err) {\n            setError('Failed to connect to the server.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleResendOtp = async () => {\n        setResendLoading(true);\n        setError('');\n        setSuccessMessage('');\n\n        try {\n            // We can re-use the register route to send a new OTP\n            const res = await fetch('/api/auth/register', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                // The API needs firstName and lastName, but it will find the existing user by email\n                // and just update the OTP. We can send dummy values.\n                body: JSON.stringify({ email, firstName: 'User', lastName: ' ' }),\n            });\n\n            if (res.ok) {\n                setSuccessMessage('A new verification code has been sent to your email.');\n            } else {\n                const data = await res.json();\n                setError(data.message || 'Failed to send new code.');\n            }\n        } catch (err) {\n            setError('Failed to connect to the server.');\n        } finally {\n            setResendLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"min-h-screen bg-vision-black text-gray-300 font-sans flex overflow-hidden\">\n            <div className=\"w-full lg:w-1/2 flex flex-col justify-center items-center p-8 sm:p-12 z-10\">\n                <div className=\"w-full max-w-md\">\n                    <Link href=\"/signup\" className=\"flex items-center gap-2 text-zinc-400 hover:text-white transition-colors mb-10 group\">\n                        <ArrowLeft size={16} className=\"group-hover:-translate-x-1 transition-transform\" /> Back to Sign Up\n                    </Link>\n\n                    <h1 className=\"text-5xl font-bold font-display text-white mb-2\">Verify Your Account</h1>\n                    <p className=\"text-zinc-400 mb-10\">\n                        Enter the 6-digit code sent to <strong className=\"text-cyan-400\">{email}</strong>.\n                    </p>\n\n                    <form onSubmit={handleVerify} className=\"space-y-5\">\n                        <div className=\"relative\">\n                            <KeyRound className=\"absolute left-4 top-1/2 -translate-y-1/2 h-5 w-5 text-zinc-500\" />\n                            <input\n                                type=\"text\"\n                                placeholder=\"_ _ _ _ _ _\"\n                                value={otp}\n                                onChange={(e) => setOtp(e.target.value)}\n                                required\n                                maxLength={6}\n                                className=\"input-auth pl-12 text-center tracking-[0.5em]\"\n                            />\n                        </div>\n                        \n                        {error && <p className=\"text-red-500 text-sm pt-1\">{error}</p>}\n                        {successMessage && <p className=\"text-green-500 text-sm pt-1\">{successMessage}</p>}\n                        \n                        <div className=\"flex items-center justify-between pt-4\">\n                            <button type=\"button\" onClick={handleResendOtp} disabled={resendLoading} className=\"text-sm text-cyan-400 hover:underline font-semibold disabled:opacity-50 disabled:cursor-wait\">\n                                {resendLoading ? 'Sending...' : 'Resend Code'}\n                            </button>\n                            <button type=\"submit\" disabled={loading} className=\"px-8 py-3 bg-cyan-400 text-black font-bold rounded-md hover:bg-cyan-500 transition-all hover:shadow-cyan-glow disabled:opacity-50 disabled:cursor-not-allowed\">\n                                {loading ? 'Verifying...' : 'Verify'}\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            \n            {/* RIGHT SIDE - VISUAL (Consistent with other pages) */}\n            <div className=\"hidden lg:block lg:w-1/2 relative\">\n                <Image src=\"/assets/images/auth-visual.jpg\" alt=\"Luxury car showcase\" layout=\"fill\" objectFit=\"cover\" quality={90} priority />\n                <div className=\"absolute inset-0 bg-gradient-to-l from-transparent via-vision-black/80 to-vision-black\"></div>\n            </div>\n        </div>\n    );\n}\n\nexport default function VerifyOtpPage() {\n    return (\n        <Suspense fallback={<div className=\"bg-vision-black h-screen\" />}>\n            <VerifyOtpComponent />\n        </Suspense>\n    )\n}","usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/api/auth/register/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/api/auth/request-password-reset/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/api/auth/reset-password/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/api/auth/verify-otp/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/api/payment/create-order/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/api/payment/verify/route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/bikes/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/booking/[slug]/page.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'times' is assigned a value but never used.","line":33,"column":12,"nodeType":null,"messageId":"unusedVar","endLine":33,"endColumn":17},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":70,"column":52,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":70,"endColumn":55,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3060,3063],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3060,3063],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":90,"column":50,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":90,"endColumn":53,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3878,3881],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3878,3881],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/app/booking/[slug]/page.tsx\n\"use client\";\n\nimport { useState, useEffect, useMemo } from 'react';\nimport { getCarById } from '@/lib/carsData';\nimport { notFound, useRouter, useParams } from 'next/navigation';\nimport Image from 'next/image';\nimport { ArrowLeft, MapPin, Calendar, User, Mail, CreditCard, Loader2 } from 'lucide-react';\nimport { format, add, differenceInCalendarDays } from 'date-fns';\nimport { DateRange } from 'react-day-picker';\nimport { LocationPicker } from '@/components/LocationPicker';\nimport { DatePicker } from '@/components/DatePicker';\n\nconst PriceRow = ({ label, value, isTotal = false }: { label: string, value: string, isTotal?: boolean }) => (\n    <div className={`flex justify-between items-center ${isTotal ? 'text-white font-bold text-lg border-t border-zinc-700 pt-4 mt-4' : 'text-zinc-300'}`}>\n        <p>{label}</p>\n        <p>{value}</p>\n    </div>\n);\n\nexport default function BookingPage() {\n    const router = useRouter();\n    const params = useParams();\n    const slug = params.slug as string;\n    const car = getCarById(slug);\n\n    const [isProcessing, setIsProcessing] = useState(false);\n    const [isLocationPickerOpen, setLocationPickerOpen] = useState(false);\n    const [isDatePickerOpen, setDatePickerOpen] = useState(false);\n  \n    const [location, setLocation] = useState('Kolkata');\n    const [dateRange, setDateRange] = useState<DateRange | undefined>({ from: new Date(), to: add(new Date(), { days: 4 }) });\n    const [times, setTimes] = useState({ start: '10:00 AM', end: '10:00 AM'});\n\n    useEffect(() => { if (!car) notFound(); }, [car]);\n\n    const priceDetails = useMemo(() => {\n        if (!car || !dateRange?.from || !dateRange?.to) return { days: 0, basePrice: 0, taxes: 0, totalPrice: 0, totalAmountInPaise: 0 };\n        const days = differenceInCalendarDays(dateRange.to, dateRange.from) || 1;\n        const basePrice = days * car.pricePerDay;\n        const taxes = basePrice * 0.18;\n        const totalPrice = Math.round(basePrice + taxes);\n        return { days, basePrice, taxes, totalPrice, totalAmountInPaise: totalPrice * 100 };\n    }, [car, dateRange]);\n\n    const handlePayment = async () => {\n        setIsProcessing(true);\n        try {\n            const res = await fetch('/api/payment/create-order', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    carId: car?.id,\n                    startDate: dateRange?.from,\n                    endDate: dateRange?.to\n                })\n            });\n\n            if (!res.ok) throw new Error('Failed to create order');\n            \n            const order = await res.json();\n\n            const options = {\n                key: process.env.NEXT_PUBLIC_RAZORPAY_KEY_ID,\n                amount: order.amount,\n                currency: order.currency,\n                name: 'VISIONDRIVE',\n                description: `Booking for ${car?.name}`,\n                order_id: order.id,\n                handler: async function (response: any) {\n                    const verifyRes = await fetch('/api/payment/verify', {\n                        method: 'POST',\n                        headers: { 'Content-Type': 'application/json' },\n                        body: JSON.stringify(response),\n                    });\n                    if (verifyRes.ok) {\n                        router.push('/booking/success');\n                    } else {\n                        alert('Payment verification failed. Please contact support.');\n                    }\n                },\n                prefill: {\n                    name: \"Test User\",\n                    email: \"test.user@example.com\",\n                    contact: \"9999999999\",\n                },\n                theme: { color: '#06b6d4' }\n            };\n\n            const paymentObject = new (window as any).Razorpay(options);\n            paymentObject.open();\n\n        } catch (error) {\n            console.error(error);\n            alert('An error occurred during payment processing.');\n        } finally {\n            setIsProcessing(false);\n        }\n    };\n\n    useEffect(() => {\n        const script = document.createElement('script');\n        script.src = 'https://checkout.razorpay.com/v1/checkout.js';\n        script.async = true;\n        document.body.appendChild(script);\n    }, []);\n\n    if (!car) return <div className=\"bg-vision-black min-h-screen\"></div>;\n\n    return (\n        <div className=\"bg-vision-black min-h-screen text-white font-sans\">\n            <LocationPicker isOpen={isLocationPickerOpen} onClose={() => setLocationPickerOpen(false)} onSelect={(city) => { setLocation(city); setLocationPickerOpen(false); }}/>\n            <DatePicker isOpen={isDatePickerOpen} onClose={() => setDatePickerOpen(false)} onApply={(range, times) => { setDateRange(range); setTimes(times); }}/>\n            \n            <main className=\"container mx-auto px-6 py-12 md:py-16\">\n                <div className=\"mb-8\">\n                    <button onClick={() => router.back()} className=\"group flex items-center gap-2 text-sm font-semibold text-zinc-400 hover:text-white transition-colors\">\n                        <ArrowLeft size={16} className=\"transition-transform group-hover:-translate-x-1\" />\n                        Back to Car Details\n                    </button>\n                    <h1 className=\"text-4xl md:text-5xl font-extrabold tracking-tighter mt-4\">Confirm Your Booking</h1>\n                </div>\n                <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 xl:gap-12\">\n                    <div className=\"lg:col-span-2 flex flex-col gap-8\">\n                        <div className=\"bg-zinc-900 border border-zinc-800 rounded-xl p-6 flex flex-col sm:flex-row gap-6\">\n                            <div className=\"relative w-full sm:w-1/3 h-40 sm:h-auto rounded-lg overflow-hidden\">\n                                <Image src={car.images.side} alt={car.name} fill className=\"object-cover\" />\n                            </div>\n                            <div className=\"flex flex-col\">\n                                <p className=\"font-semibold text-cyan-400\">{car.brand}</p>\n                                <h2 className=\"text-2xl font-bold text-white\">{car.name}</h2>\n                                <p className=\"text-sm text-zinc-400 mt-1\">{car.bodyType}</p>\n                            </div>\n                        </div>\n                        <div className=\"bg-zinc-900 border border-zinc-800 rounded-xl p-6\">\n                            <h3 className=\"text-xl font-bold mb-4\">Trip Details</h3>\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                                <button onClick={() => setLocationPickerOpen(true)} className=\"p-4 bg-zinc-800/50 rounded-lg text-left hover:bg-zinc-800 transition-colors\">\n                                    <div className=\"flex items-center gap-2 text-sm text-zinc-400\"><MapPin size={16}/> Location</div>\n                                    <p className=\"font-semibold text-white mt-1 text-lg\">{location}</p>\n                                </button>\n                                <button onClick={() => setDatePickerOpen(true)} className=\"p-4 bg-zinc-800/50 rounded-lg text-left hover:bg-zinc-800 transition-colors\">\n                                    <div className=\"flex items-center gap-2 text-sm text-zinc-400\"><Calendar size={16}/> Pickup & Return</div>\n                                    <p className=\"font-semibold text-white mt-1\">\n                                        {dateRange?.from ? format(dateRange.from, 'dd MMM') : ''}\n                                        {dateRange?.to ? ` - ${format(dateRange.to, 'dd MMM, yyyy')}` : ''}\n                                    </p>\n                                </button>\n                            </div>\n                        </div>\n                         <div className=\"bg-zinc-900 border border-zinc-800 rounded-xl p-6\">\n                            <h3 className=\"text-xl font-bold mb-4\">Your Information</h3>\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                                <div className=\"relative\"><User className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-zinc-500\" /><input type=\"text\" placeholder=\"Full Name\" required className=\"input-auth pl-10\" /></div>\n                                <div className=\"relative\"><Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-zinc-500\" /><input type=\"email\" placeholder=\"Email Address\" required className=\"input-auth pl-10\" /></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"lg:col-span-1\">\n                        <div className=\"bg-zinc-900 border border-zinc-800 rounded-xl p-6 sticky top-24\">\n                            <h3 className=\"text-xl font-bold mb-4\">Price Summary</h3>\n                            <div className=\"space-y-3\">\n                                {dateRange?.from && dateRange?.to ? (\n                                    <>\n                                        <PriceRow label={`₹${car.pricePerDay.toLocaleString()} x ${priceDetails.days} days`} value={`₹${priceDetails.basePrice.toLocaleString()}`} />\n                                        <PriceRow label=\"Taxes & Fees (18%)\" value={`₹${priceDetails.taxes.toLocaleString()}`} />\n                                        <PriceRow label=\"Total Amount\" value={`₹${priceDetails.totalPrice.toLocaleString()}`} isTotal={true} />\n                                    </>\n                                ) : ( <p className=\"text-center text-zinc-400 py-8\">Select dates to see price.</p> )}\n                            </div>\n                             <div className=\"mt-8\">\n                                <button onClick={handlePayment} disabled={!dateRange?.from || !dateRange?.to || isProcessing} className=\"w-full flex items-center justify-center gap-3 px-10 py-4 bg-cyan-400 text-black text-lg font-bold rounded-lg hover:bg-cyan-500 transition-all hover:shadow-cyan-glow hover:-translate-y-0.5 disabled:opacity-50 disabled:cursor-not-allowed\">\n                                    {isProcessing ? <Loader2 className=\"animate-spin\" /> : <CreditCard size={20} />}\n                                    {isProcessing ? 'Processing...' : 'Confirm & Pay'}\n                                </button>\n                             </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </div>\n    )\n}","usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/booking/success/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/cars/[slug]/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/cars/page.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'AnimatePresence' is defined but never used.","line":6,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":6,"endColumn":25},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'motion' is defined but never used.","line":6,"column":27,"nodeType":null,"messageId":"unusedVar","endLine":6,"endColumn":33},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Car' is defined but never used.","line":12,"column":15,"nodeType":null,"messageId":"unusedVar","endLine":12,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'SlidersHorizontal' is defined but never used.","line":13,"column":57,"nodeType":null,"messageId":"unusedVar","endLine":13,"endColumn":74},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'X' is defined but never used.","line":13,"column":84,"nodeType":null,"messageId":"unusedVar","endLine":13,"endColumn":85}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\n\nimport { useState, useEffect, useMemo } from 'react';\nimport { format, add } from 'date-fns';\nimport { DateRange } from 'react-day-picker';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { CarCard, CarCardSkeleton } from '@/components/CarCard';\nimport { FilterPillPopover, PriceFilterPopover } from '@/components/FilterPopover';\nimport { LocationPicker } from '@/components/LocationPicker';\nimport { DatePicker } from '@/components/DatePicker';\nimport { carsData } from '@/lib/carsData';\nimport type { Car } from '@/lib/carsData';\nimport { MapPin, Calendar, GitCommit, Fuel, DollarSign, SlidersHorizontal, Shield, X, Search, ChevronLeft, ChevronRight } from 'lucide-react';\n\nconst CARS_PER_PAGE = 9;\n\nconst allBrands = [...new Set(carsData.map(car => car.brand))].sort();\nconst allDriveTypes = [...new Set(carsData.map(car => car.specs.drive))].sort();\nconst allFuelTypes = [...new Set(carsData.map(car => car.specs.fuelType))].sort();\nconst prices = carsData.map(car => car.pricePerDay);\nconst priceMinMax: [number, number] = [Math.min(...prices), Math.max(...prices)];\n\nconst initialFilters = { brands: [], driveTypes: [], fuelTypes: [] };\n\nexport default function CarsPage() {\n  const [loading, setLoading] = useState(true);\n  const [filters, setFilters] = useState(initialFilters);\n  const [priceFilter, setPriceFilter] = useState<[number, number]>(priceMinMax);\n  const [sortKey, setSortKey] = useState('featured');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const [isLocationPickerOpen, setLocationPickerOpen] = useState(false);\n  const [isDatePickerOpen, setDatePickerOpen] = useState(false);\n  \n  const [location, setLocation] = useState('Kolkata');\n  const [dateRange, setDateRange] = useState<DateRange | undefined>({ from: new Date(), to: add(new Date(), { days: 3 }) });\n  const [times, setTimes] = useState({ start: '10:00 AM', end: '10:00 AM'});\n\n  useEffect(() => { setLoading(false) }, []);\n\n  const toggleFilter = (category: keyof typeof filters, value: string) => {\n    setFilters(prev => ({ ...prev, [category]: prev[category].includes(value) ? prev[category].filter(item => item !== value) : [...prev[category], value] }));\n  };\n  \n  const filteredAndSortedCars = useMemo(() => {\n    const result = carsData.filter(car => \n      (filters.brands.length === 0 || filters.brands.includes(car.brand)) &&\n      (filters.driveTypes.length === 0 || filters.driveTypes.includes(car.specs.drive)) &&\n      (filters.fuelTypes.length === 0 || filters.fuelTypes.includes(car.specs.fuelType)) &&\n      (car.pricePerDay >= priceFilter[0] && car.pricePerDay <= priceFilter[1])\n    );\n    switch (sortKey) {\n      case 'price_asc': result.sort((a, b) => a.pricePerDay - b.pricePerDay); break;\n      case 'price_desc': result.sort((a, b) => b.pricePerDay - a.pricePerDay); break;\n      case 'hp_desc': result.sort((a, b) => b.specs.horsepower - a.specs.horsepower); break;\n    }\n    return result;\n  }, [filters, priceFilter, sortKey]);\n\n  useEffect(() => { setCurrentPage(1); }, [filters, priceFilter, sortKey]);\n  \n  const totalPages = Math.ceil(filteredAndSortedCars.length / CARS_PER_PAGE);\n  const paginatedCars = filteredAndSortedCars.slice((currentPage - 1) * CARS_PER_PAGE, currentPage * CARS_PER_PAGE);\n  \n  const isPriceFiltered = priceFilter[0] > priceMinMax[0] || priceFilter[1] < priceMinMax[1];\n\n  const NoResults = () => (\n    <div className=\"col-span-full flex flex-col items-center justify-center py-20 text-center\">\n        <Search size={48} className=\"text-zinc-600 mb-4\" />\n        <h3 className=\"text-xl font-semibold text-white\">No Vehicles Found</h3>\n        <p className=\"text-zinc-400 mt-2\">Try adjusting your filters to find what you&apos;re looking for.</p>\n    </div>\n  );\n  \n  return (\n    <div className=\"bg-vision-black min-h-screen text-white\">\n        <LocationPicker isOpen={isLocationPickerOpen} onClose={() => setLocationPickerOpen(false)} onSelect={(city) => { setLocation(city); setLocationPickerOpen(false); }}/>\n        <DatePicker isOpen={isDatePickerOpen} onClose={() => setDatePickerOpen(false)} onApply={(range, times) => { setDateRange(range); setTimes(times); }}/>\n\n      <header className=\"py-16 bg-black border-b border-zinc-800\">\n        <div className=\"container mx-auto px-6 text-center\">\n          <h1 className=\"text-4xl md:text-5xl font-extrabold tracking-tighter\">Explore The <span className=\"text-cyan-400\">Fleet</span></h1>\n          <p className=\"mt-4 max-w-2xl mx-auto text-gray-400\">Hand-picked for performance, luxury, and style. Your next drive starts here.</p>\n        </div>\n        <div className=\"container mx-auto px-6 mt-10 max-w-5xl\">\n            <div className=\"p-3 bg-zinc-900/50 backdrop-blur-sm border border-zinc-700 rounded-xl grid grid-cols-1 md:grid-cols-4 items-center gap-px shadow-lg\">\n                <button onClick={() => setLocationPickerOpen(true)} className=\"p-3 text-left hover:bg-zinc-800 rounded-l-lg transition-colors\">\n                    <div className=\"flex items-center gap-2 text-xs text-zinc-400\"><MapPin size={14}/> Location</div>\n                    <p className=\"font-bold text-white mt-1 text-lg\">{location}</p>\n                </button>\n                 <button onClick={() => setDatePickerOpen(true)} className=\"p-3 text-left hover:bg-zinc-800 transition-colors col-span-2\">\n                    <div className=\"grid grid-cols-2 gap-px\">\n                        <div>\n                           <div className=\"flex items-center gap-2 text-xs text-zinc-400\"><Calendar size={14}/> Pickup</div>\n                           <p className=\"font-bold text-white mt-1\">{dateRange?.from ? `${format(dateRange.from, 'dd MMM, yyyy')} • ${times.start}` : 'Select Date'}</p>\n                        </div>\n                         <div>\n                           <div className=\"flex items-center gap-2 text-xs text-zinc-400\"><Calendar size={14}/> Return</div>\n                           <p className=\"font-bold text-white mt-1\">{dateRange?.to ? `${format(dateRange.to, 'dd MMM, yyyy')} • ${times.end}` : 'Select Date'}</p>\n                        </div>\n                    </div>\n                </button>\n                <button className=\"h-full bg-cyan-400 text-black font-bold rounded-lg hover:bg-cyan-500 transition-colors text-lg\">Search</button>\n            </div>\n        </div>\n      </header>\n      \n      <main className=\"container mx-auto px-6 py-12\">\n        <div className=\"sticky top-0 z-20 py-4 bg-vision-black\">\n            <div className=\"mb-6 flex flex-col sm:flex-row gap-4 justify-between items-center\">\n                <h2 className=\"text-xl font-bold\">\n                    <span className=\"text-cyan-400\">{filteredAndSortedCars.length}</span> vehicles available\n                </h2>\n                <div className=\"flex items-center gap-4\">\n                    <select value={sortKey} onChange={(e) => setSortKey(e.target.value)} className=\"bg-zinc-800 border border-zinc-700 rounded-md px-3 py-2 text-sm font-semibold focus:outline-none focus:ring-2 focus:ring-cyan-400\">\n                        <option value=\"featured\">Sort: Featured</option>\n                        <option value=\"price_asc\">Price: Low to High</option>\n                        <option value=\"price_desc\">Price: High to Low</option>\n                        <option value=\"hp_desc\">Horsepower: High to Low</option>\n                    </select>\n                </div>\n            </div>\n            <div className=\"hidden md:flex justify-center items-center py-4 bg-zinc-900/50 backdrop-blur-sm border border-zinc-800 rounded-full\">\n                <div className=\"flex items-center justify-center space-x-6\">\n                <FilterPillPopover label=\"Brand\" icon={<Shield size={16}/>} activeCount={filters.brands.length} options={allBrands} selected={filters.brands} onToggle={(brand) => toggleFilter('brands', brand)} onApply={() => {}} />\n                <FilterPillPopover label=\"Drivetrain\" icon={<GitCommit size={16}/>} activeCount={filters.driveTypes.length} options={allDriveTypes} selected={filters.driveTypes} onToggle={(drive) => toggleFilter('driveTypes', drive)} onApply={() => {}} />\n                <PriceFilterPopover label=\"Price\" icon={<DollarSign size={16}/>} active={isPriceFiltered} priceRange={priceFilter} setPriceRange={setPriceFilter} minMax={priceMinMax} onApply={() => {}} activeCount={0} />\n                <FilterPillPopover label=\"Fuel Type\" icon={<Fuel size={16}/>} activeCount={filters.fuelTypes.length} options={allFuelTypes} selected={filters.fuelTypes} onToggle={(fuel) => toggleFilter('fuelTypes', fuel)} onApply={() => {}}/>\n                </div>\n            </div>\n        </div>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 min-h-[500px] mt-8\">\n          {loading ? Array.from({ length: CARS_PER_PAGE }).map((_, i) => <CarCardSkeleton key={i} />) : paginatedCars.length > 0 ? paginatedCars.map((car) => <CarCard key={car.id} car={car} />) : <NoResults />}\n        </div>\n        {!loading && totalPages > 1 && (\n            <div className=\"mt-12 flex justify-center items-center gap-2\">\n                <button onClick={() => setCurrentPage(p => Math.max(1, p - 1))} disabled={currentPage === 1} className=\"w-10 h-10 flex items-center justify-center bg-zinc-800 rounded-full disabled:opacity-50 disabled:cursor-not-allowed hover:bg-zinc-700 transition-colors\"><ChevronLeft size={20} /></button>\n                <span className=\"text-sm font-semibold text-zinc-400 w-24 text-center\">Page {currentPage} of {totalPages}</span>\n                <button onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))} disabled={currentPage === totalPages} className=\"w-10 h-10 flex items-center justify-center bg-zinc-800 rounded-full disabled:opacity-50 disabled:cursor-not-allowed hover:bg-zinc-700 transition-colors\"><ChevronRight size={20} /></button>\n            </div>\n        )}\n      </main>\n    </div>\n  );\n}","usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/contact/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/faq/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/forgot-password/page.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'err' is defined but never used.","line":33,"column":18,"nodeType":null,"messageId":"unusedVar","endLine":33,"endColumn":21}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\n\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { ArrowLeft, Mail } from 'lucide-react';\n\nexport default function ForgotPasswordPage() {\n    const [email, setEmail] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [message, setMessage] = useState('');\n    const [error, setError] = useState('');\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setLoading(true);\n        setMessage('');\n        setError('');\n\n        try {\n            const res = await fetch('/api/auth/request-password-reset', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ email }),\n            });\n            \n            const data = await res.json();\n\n            if (res.ok) {\n                setMessage(data.message);\n            } else {\n                setError(data.message);\n            }\n        } catch (err) {\n            setError('Failed to connect to the server.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"min-h-screen bg-vision-black text-gray-300 font-sans flex\">\n            <div className=\"w-full flex flex-col justify-center items-center p-8 sm:p-12\">\n                <div className=\"w-full max-w-md\">\n                    <Link href=\"/signin\" className=\"flex items-center gap-2 text-zinc-400 hover:text-white transition-colors mb-10 group\">\n                        <ArrowLeft size={16} className=\"group-hover:-translate-x-1 transition-transform\" /> Back to Sign In\n                    </Link>\n\n                    <h1 className=\"text-5xl font-bold font-display text-white mb-2\">Reset Password</h1>\n                    <p className=\"text-zinc-400 mb-10\">Enter your email and we&aposl;ll send you a link to get back into your account.</p>\n                    <form onSubmit={handleSubmit} className=\"space-y-5\">\n                        <div className=\"relative\">\n                            <Mail className=\"absolute left-4 top-1/2 -translate-y-1/2 h-5 w-5 text-zinc-500\" />\n                            <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required className=\"input-auth pl-12\" />\n                        </div>\n                        \n                        {message && <p className=\"text-green-500 text-sm pt-1\">{message}</p>}\n                        {error && <p className=\"text-red-500 text-sm pt-1\">{error}</p>}\n                        \n                        <div className=\"pt-4\">\n                            <button type=\"submit\" disabled={loading} className=\"w-full px-8 py-3 bg-cyan-400 text-black font-bold rounded-md hover:bg-cyan-500 transition-all hover:shadow-cyan-glow disabled:opacity-50\">\n                                {loading ? 'Sending Link...' : 'Send Reset Link'}\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}","usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/how-it-works/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/layout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/privacy-policy/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/reset-password/page.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'err' is defined but never used.","line":52,"column":18,"nodeType":null,"messageId":"unusedVar","endLine":52,"endColumn":21}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\n\nimport { useState, useEffect, Suspense } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport Link from 'next/link';\nimport { Lock } from 'lucide-react';\n\nfunction ResetPasswordComponent() {\n    const router = useRouter();\n    const searchParams = useSearchParams();\n    const token = searchParams.get('token');\n\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    useEffect(() => {\n        if (!token) {\n            router.push('/forgot-password');\n        }\n    }, [token, router]);\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            setError(\"Passwords do not match.\");\n            return;\n        }\n        if (password.length < 6) {\n            setError(\"Password must be at least 6 characters long.\");\n            return;\n        }\n\n        setLoading(true);\n        setError('');\n\n        try {\n            const res = await fetch('/api/auth/reset-password', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ token, password }),\n            });\n\n            const data = await res.json();\n            if (res.ok) {\n                setSuccess(true);\n            } else {\n                setError(data.message || 'Failed to reset password. The link may be invalid or expired.');\n            }\n        } catch (err) {\n            setError('Failed to connect to the server.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    if (success) {\n        return (\n            <div className=\"min-h-screen w-full flex flex-col justify-center items-center p-8 bg-zinc-900\">\n                <div className=\"w-full max-w-sm text-center\">\n                    <h1 className=\"text-3xl font-bold text-white mb-4\">Password Reset Successful!</h1>\n                    <p className=\"text-gray-400 mb-6\">You can now log in with your new password.</p>\n                    <Link href=\"/signin\" className=\"w-full inline-block px-8 py-3 bg-cyan-400 text-black font-bold rounded-lg hover:bg-cyan-500 transition-colors\">\n                        Back to Log In\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n    \n    if (!token) return null;\n\n    return (\n        <div className=\"min-h-screen w-full grid grid-cols-1 lg:grid-cols-2 bg-zinc-900\">\n            <div className=\"flex flex-col justify-center items-center p-8\">\n                <div className=\"w-full max-w-sm\">\n                    <div className=\"text-center mb-8\">\n                        <h2 className=\"text-2xl font-bold text-white\">Set a New Password</h2>\n                        <p className=\"text-gray-400 mt-2\">Create a new, strong password for your account.</p>\n                    </div>\n                    <form onSubmit={handleSubmit} className=\"space-y-4\">\n                        <div className=\"relative\">\n                            <Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                            <input name=\"password\" type=\"password\" placeholder=\"New Password\" required className=\"input-field pl-10\" value={password} onChange={(e) => setPassword(e.target.value)} />\n                        </div>\n                        <div className=\"relative\">\n                            <Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                            <input name=\"confirmPassword\" type=\"password\" placeholder=\"Confirm New Password\" required className=\"input-field pl-10\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\n                        </div>\n                        {error && <p className=\"text-red-500 text-sm text-center pt-2\">{error}</p>}\n                        <button type=\"submit\" disabled={loading} className=\"w-full bg-cyan-400 text-black font-bold py-3 rounded-lg hover:bg-cyan-500 transition-colors disabled:opacity-50\">\n                            {loading ? \"Resetting...\" : \"Reset Password\"}\n                        </button>\n                    </form>\n                </div>\n            </div>\n            <div className=\"hidden lg:block relative overflow-hidden\">\n                <video src=\"/auth-video.mp4\" autoPlay loop muted playsInline className=\"absolute top-0 left-0 w-full h-full object-cover\" />\n                <div className=\"absolute inset-0 bg-gradient-to-r from-zinc-900 via-zinc-900/70 to-black/30\" />\n            </div>\n        </div>\n    );\n}\n\nexport default function ResetPasswordPage() {\n    return (\n        <Suspense fallback={<div className=\"h-screen w-full bg-black\" />}>\n            <ResetPasswordComponent />\n        </Suspense>\n    );\n}","usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/signin/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/signup/page.tsx","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'err' is defined but never used.","line":56,"column":18,"nodeType":null,"messageId":"unusedVar","endLine":56,"endColumn":21,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/terms-and-conditions/page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/app/verify-otp/page.tsx","messages":[{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","line":41,"column":45,"nodeType":"JSXText","messageId":"unescapedEntityAlts","suggestions":[{"messageId":"replaceWithAlt","data":{"alt":"&apos;"},"fix":{"range":[1247,1276],"text":"We&apos;ve sent a 6-digit code to "},"desc":"Replace with `&apos;`."},{"messageId":"replaceWithAlt","data":{"alt":"&lsquo;"},"fix":{"range":[1247,1276],"text":"We&lsquo;ve sent a 6-digit code to "},"desc":"Replace with `&lsquo;`."},{"messageId":"replaceWithAlt","data":{"alt":"&#39;"},"fix":{"range":[1247,1276],"text":"We&#39;ve sent a 6-digit code to "},"desc":"Replace with `&#39;`."},{"messageId":"replaceWithAlt","data":{"alt":"&rsquo;"},"fix":{"range":[1247,1276],"text":"We&rsquo;ve sent a 6-digit code to "},"desc":"Replace with `&rsquo;`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/app/verify-otp/page.tsx\n\"use client\";\nimport { useState, Suspense } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport AuthLayout from '@/components/layouts/AuthLayout';\n\nfunction VerifyOTPComponent() {\n  const [otp, setOtp] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [loading, setLoading] = useState(false);\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const email = searchParams.get('email');\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setSuccess('');\n\n    const res = await fetch('/api/auth/verify-otp', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, otp }),\n    });\n    \n    const data = await res.json();\n    if (!res.ok) {\n        setError(data.message);\n        setLoading(false);\n    } else {\n        setSuccess(data.message);\n        setTimeout(() => router.push('/signin'), 2000);\n    }\n  };\n\n  return (\n    <AuthLayout>\n        <h2 className=\"text-2xl font-bold text-white mb-2\">Verify Your Email</h2>\n        <p className=\"text-gray-400 mb-8\">We've sent a 6-digit code to <span className=\"text-white font-semibold\">{email}</span>. Please enter it below.</p>\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <input type=\"text\" value={otp} onChange={(e) => setOtp(e.target.value)} placeholder=\"_ _ _ _ _ _\" maxLength={6} required className=\"w-full bg-zinc-800 border border-zinc-700 rounded-md p-3 text-white text-center text-2xl tracking-[0.5em] placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-cyan-400\" />\n            {error && <p className=\"text-red-500 text-sm\">{error}</p>}\n            {success && <p className=\"text-green-500 text-sm\">{success}</p>}\n            <button type=\"submit\" disabled={loading || !!success} className=\"w-full bg-white text-black font-bold py-3 rounded-md hover:bg-gray-200 transition-colors disabled:opacity-50\">\n              {loading ? 'Verifying...' : 'Verify Account'}\n            </button>\n        </form>\n    </AuthLayout>\n  );\n}\n\n// Wrap with Suspense because useSearchParams must be used in a Client Component that is a child of a Suspense boundary.\nexport default function VerifyOTPPage() {\n    return (\n        <Suspense fallback={<div>Loading...</div>}>\n            <VerifyOTPComponent />\n        </Suspense>\n    )\n}","usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/components/AuthForm.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'loading' is assigned a value but never used.","line":18,"column":12,"nodeType":null,"messageId":"unusedVar","endLine":18,"endColumn":19},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'router' is assigned a value but never used.","line":20,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":20,"endColumn":17},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'handleGoogleSignIn' is assigned a value but never used.","line":24,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":24,"endColumn":29},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'formVariants' is assigned a value but never used.","line":28,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":28,"endColumn":23},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":94,"column":59,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":94,"endColumn":62,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[4489,4492],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[4489,4492],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":134,"column":47,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":134,"endColumn":50,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[6758,6761],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[6758,6761],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/AuthForm.tsx\n\n\"use client\";\n\nimport { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useSearchParams, useRouter } from 'next/navigation';\nimport { signIn } from 'next-auth/react';\nimport Link from 'next/link';\nimport GoogleIcon from './icons/GoogleIcon';\nimport { Mail, Lock, User as UserIcon } from 'lucide-react';\n\ntype Mode = 'login' | 'signup';\n\nconst AuthForm = () => {\n    const [mode, setMode] = useState<Mode>('login');\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n    \n    const router = useRouter();\n    const searchParams = useSearchParams();\n    const callbackUrl = searchParams.get('callbackUrl') || '/';\n\n    const handleGoogleSignIn = () => {\n        signIn('google', { callbackUrl });\n    };\n\n    const formVariants = {\n        hidden: { opacity: 0, x: -20 },\n        visible: { opacity: 1, x: 0, transition: { duration: 0.4, ease: 'easeOut' } },\n        exit: { opacity: 0, x: 20, transition: { duration: 0.3, ease: 'easeIn' } }\n    };\n\n    return (\n        <div className=\"min-h-screen w-full grid grid-cols-1 lg:grid-cols-2 bg-zinc-900\">\n            \n            {/* Left Panel: Form */}\n            <div className=\"flex flex-col justify-center items-center p-8\">\n                <div className=\"w-full max-w-sm\">\n                    <Link href=\"/\" className=\"flex justify-center mb-8\">\n                        <h1 className=\"text-3xl font-bold tracking-wider text-gray-300\">\n                            VISION<span className=\"text-cyan-400\">DRIVE</span>\n                        </h1>\n                    </Link>\n                    \n                    <div className=\"relative w-full bg-zinc-800 rounded-full p-1 flex mb-8\">\n                        <button onClick={() => setMode('login')} className=\"relative w-1/2 rounded-full p-2 text-sm font-semibold text-white z-10 transition-colors\">Log In</button>\n                        <button onClick={() => setMode('signup')} className=\"relative w-1/2 rounded-full p-2 text-sm font-semibold text-white z-10 transition-colors\">Sign Up</button>\n                        <motion.div\n                            layoutId=\"auth-pill\"\n                            transition={{ type: 'spring', stiffness: 250, damping: 25 }}\n                            className=\"absolute inset-0 h-full bg-cyan-400/30 border border-cyan-400/50 rounded-full\"\n                            style={mode === 'login' ? { left: '1.5%', width: '48.5%' } : { left: '50%', width: '50%' }}\n                        />\n                    </div>\n\n                    <AnimatePresence mode=\"wait\">\n                        {mode === 'login' ? (\n                            <LoginForm key=\"login\" setLoading={setLoading} setError={setError} callbackUrl={callbackUrl} />\n                        ) : (\n                            <SignUpForm key=\"signup\" setLoading={setLoading} setError={setError} />\n                        )}\n                    </AnimatePresence>\n                     {error && <p className=\"text-red-500 text-sm text-center pt-4\">{error}</p>}\n                </div>\n            </div>\n\n            {/* Right Panel: Cinematic Video */}\n            <div className=\"hidden lg:block relative overflow-hidden\">\n                <video\n                    src=\"/auth-video.mp4\"\n                    autoPlay\n                    loop\n                    muted\n                    playsInline\n                    className=\"absolute top-0 left-0 w-full h-full object-cover\"\n                />\n                <div className=\"absolute inset-0 bg-gradient-to-r from-zinc-900 via-zinc-900/70 to-black/30\" />\n                <div className=\"relative z-10 flex flex-col justify-end h-full p-12 text-white\">\n                    <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1, transition: { delay: 0.3, duration: 0.8 } }} className=\"space-y-2\">\n                        <h2 className=\"text-5xl font-extrabold tracking-tight\">The Drive of Your Life</h2>\n                        <h2 className=\"text-5xl font-extrabold tracking-tight text-cyan-400\">Awaits.</h2>\n                        <p className=\"text-lg text-gray-300 max-w-md pt-4\">\n                            Access a world of automotive excellence. Your next adventure is just a login away.\n                        </p>\n                    </motion.div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nconst LoginForm = ({ setLoading, setError, callbackUrl }: any) => {\n    const router = useRouter();\n    \n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        setLoading(true);\n        setError('');\n        const formData = new FormData(e.currentTarget);\n        const result = await signIn('credentials', {\n            redirect: false,\n            email: formData.get('email'),\n            password: formData.get('password')\n        });\n        if (result?.error) {\n            setError(result.error);\n        } else {\n            router.push(callbackUrl);\n        }\n        setLoading(false);\n    };\n\n    return (\n        <motion.div variants={formVariants} initial=\"hidden\" animate=\"visible\" exit=\"exit\">\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n                 <div className=\"relative\">\n                    <Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-gray-400\" /><input name=\"email\" type=\"email\" placeholder=\"Email\" required className=\"input-field pl-10\" />\n                </div>\n                <div className=\"relative\">\n                    <Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-gray-400\" /><input name=\"password\" type=\"password\" placeholder=\"Password\" required className=\"input-field pl-10\" />\n                </div>\n                <motion.button type=\"submit\" disabled={loading} className=\"w-full bg-cyan-400 text-black font-bold py-3 rounded-lg hover:bg-cyan-500 transition-colors disabled:opacity-50\">{loading ? \"Signing In...\" : \"Log In\"}</motion.button>\n            </form>\n             <div className=\"flex items-center my-6\"><div className=\"flex-grow border-t border-zinc-700\"></div><span className=\"px-4 text-xs text-gray-500 uppercase\">OR</span><div className=\"flex-grow border-t border-zinc-700\"></div></div>\n             <motion.button onClick={() => signIn('google', { callbackUrl })} className=\"w-full flex items-center justify-center gap-3 bg-zinc-800 border border-zinc-700 py-3 rounded-lg hover:border-cyan-400 transition-colors\"><GoogleIcon /> <span className=\"font-semibold\">Continue with Google</span></motion.button>\n        </motion.div>\n    );\n};\n\n// src/components/AuthForm.tsx -> SignUpForm sub-component\n\nconst SignUpForm = ({ setLoading, setError }: any) => {\n    const router = useRouter();\n\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        setLoading(true);\n        setError('');\n        const formData = new FormData(e.currentTarget);\n        const res = await fetch('/api/auth/register', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(Object.fromEntries(formData))\n        });\n        const data = await res.json();\n        if (!res.ok) {\n            setError(data.message);\n        } else {\n            router.push(`/verify-otp?email=${formData.get('email')}`);\n        }\n        setLoading(false);\n    };\n\n    return (\n        <motion.div variants={formVariants} initial=\"hidden\" animate=\"visible\" exit=\"exit\">\n             <form onSubmit={handleSubmit} className=\"space-y-4\">\n                 <div className=\"flex gap-4\">\n                    <div className=\"relative w-1/2\"><UserIcon className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-gray-400\" /><input name=\"firstName\" type=\"text\" placeholder=\"First Name\" required className=\"input-field pl-10\" /></div>\n                    <div className=\"relative w-1/2\"><UserIcon className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-gray-400\" /><input name=\"lastName\" type=\"text\" placeholder=\"Last Name\" required className=\"input-field pl-10\" /></div>\n                </div>\n                <div className=\"relative\"><Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-gray-400\" /><input name=\"email\" type=\"email\" placeholder=\"Email\" required className=\"input-field pl-10\" /></div>\n                <div className=\"relative\"><Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-gray-400\" /><input name=\"password\" type=\"password\" placeholder=\"Password\" required className=\"input-field pl-10\" /></div>\n                <motion.button type=\"submit\" disabled={loading} className=\"w-full bg-cyan-400 text-black font-bold py-3 rounded-lg hover:bg-cyan-500 transition-colors disabled:opacity-50\">{loading ? \"Creating Account...\" : \"Create Account\"}</motion.button>\n             </form>\n             <div className=\"flex items-center my-6\"><div className=\"flex-grow border-t border-zinc-700\"></div><span className=\"px-4 text-xs text-gray-500 uppercase\">OR</span><div className=\"flex-grow border-t border-zinc-700\"></div></div>\n             <motion.button onClick={() => signIn('google')} className=\"w-full flex items-center justify-center gap-3 bg-zinc-800 border border-zinc-700 py-3 rounded-lg hover:border-cyan-400 transition-colors\"><GoogleIcon /> <span className=\"font-semibold\">Continue with Google</span></motion.button>\n        </motion.div>\n    );\n};\n\nexport default AuthForm;","usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/components/AuthProvider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/components/CarCard.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"Assignments to the 'viewIndex' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","line":21,"column":21,"nodeType":"BinaryExpression","endLine":21,"endColumn":56}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { SlidersHorizontal, Users, Zap } from 'lucide-react';\nimport type { Car } from '@/lib/carsData';\n\nconst hoverViews: (keyof Omit<Car['images'], 'side' | 'interior'>)[] = ['front', 'left', 'right', 'back'];\n\nexport const CarCard = ({ car }: { car: Car }) => {\n  const [currentImage, setCurrentImage] = useState(car.images.side);\n  const [isHovered, setIsHovered] = useState(false);\n  let viewIndex = 0;\n\n  useEffect(() => {\n    let interval: NodeJS.Timeout;\n    if (isHovered) {\n      interval = setInterval(() => {\n        viewIndex = (viewIndex + 1) % hoverViews.length;\n        setCurrentImage(car.images[hoverViews[viewIndex]]);\n      }, 1000);\n    } else {\n      setCurrentImage(car.images.side);\n    }\n    return () => clearInterval(interval);\n  }, [isHovered, car.images]);\n\n  return (\n    <Link href={`/cars/${car.id}`} className=\"block\">\n      <div \n        className=\"group bg-zinc-900 rounded-xl p-4 flex flex-col h-full border border-transparent hover:border-cyan-400/50 transition-colors duration-300\"\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n      >\n        <div className=\"relative h-40 mb-4\">\n          <AnimatePresence>\n            <motion.div\n              key={currentImage}\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              transition={{ duration: 0.3 }}\n              className=\"absolute inset-0\"\n            >\n              <Image\n                src={currentImage}\n                alt={`${car.name} view`}\n                fill\n                className=\"object-contain\"\n                sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw\"\n              />\n            </motion.div>\n          </AnimatePresence>\n        </div>\n        <div className=\"flex-grow\">\n          <p className=\"text-sm font-medium text-gray-400\">{car.brand}</p>\n          <h3 className=\"text-xl font-bold text-white group-hover:text-cyan-400 transition-colors\">{car.name}</h3>\n          <div className=\"mt-4 grid grid-cols-3 gap-2 text-center border-t border-zinc-800 pt-3\">\n            <div className=\"text-xs\">\n              <Zap size={18} className=\"mx-auto text-zinc-500 mb-1\" />\n              {car.specs.horsepower} HP\n            </div>\n            <div className=\"text-xs\">\n              <SlidersHorizontal size={18} className=\"mx-auto text-zinc-500 mb-1\" />\n              {car.specs.transmission}\n            </div>\n            <div className=\"text-xs\">\n              <Users size={18} className=\"mx-auto text-zinc-500 mb-1\" />\n              {car.specs.seats} Seats\n            </div>\n          </div>\n        </div>\n        <div className=\"mt-4 flex justify-between items-center border-t border-zinc-800 pt-3\">\n          <p className=\"text-sm text-gray-400\">Starts from</p>\n          <p className=\"text-xl font-bold text-cyan-400\">₹{car.pricePerDay.toLocaleString()}<span className=\"text-sm font-normal text-gray-300\">/day</span></p>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport const CarCardSkeleton = () => (\n    <div className=\"bg-zinc-900 rounded-xl p-4 flex flex-col h-full animate-pulse\">\n        <div className=\"relative h-40 mb-4 bg-zinc-800 rounded-lg\"></div>\n        <div className=\"flex-grow\">\n            <div className=\"h-4 bg-zinc-800 rounded w-1/3 mb-2\"></div>\n            <div className=\"h-6 bg-zinc-800 rounded w-2/3\"></div>\n            <div className=\"mt-4 grid grid-cols-3 gap-2 border-t border-zinc-800 pt-3\">\n                <div className=\"h-8 bg-zinc-800 rounded\"></div>\n                <div className=\"h-8 bg-zinc-800 rounded\"></div>\n                <div className=\"h-8 bg-zinc-800 rounded\"></div>\n            </div>\n        </div>\n        <div className=\"mt-4 flex justify-between items-center border-t border-zinc-800 pt-3\">\n            <div className=\"h-4 bg-zinc-800 rounded w-1/4\"></div>\n            <div className=\"h-6 bg-zinc-800 rounded w-1/3\"></div>\n        </div>\n    </div>\n);","usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/components/DatePicker.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/components/FilterPopover.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/components/FilterSidebar.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'ChevronUp' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":19},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'SlidersHorizontal' is defined but never used.","line":3,"column":21,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":38},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Users' is defined but never used.","line":3,"column":40,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":45},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Fuel' is defined but never used.","line":3,"column":47,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":51},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Zap' is defined but never used.","line":3,"column":53,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":56}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\n\nimport { ChevronUp, SlidersHorizontal, Users, Fuel, Zap } from 'lucide-react';\nimport Slider from 'rc-slider';\n\ntype FilterProps = {\n  filters: {\n    brands: string[];\n    driveTypes: string[];\n    fuelTypes: string[];\n  };\n  priceFilter: [number, number];\n  setPriceFilter: (value: [number, number]) => void;\n  toggleFilter: (category: keyof FilterProps['filters'], value: string) => void;\n  allBrands: string[];\n  allDriveTypes: string[];\n  allFuelTypes: string[];\n  priceMinMax: [number, number];\n  clearFilters: () => void;\n  activeFilterCount: number;\n};\n\nconst FilterSection = ({ title, children }: { title: string, children: React.ReactNode }) => (\n  <div className=\"py-4 border-t border-zinc-800\">\n    <h3 className=\"font-semibold text-white mb-3 px-1\">{title}</h3>\n    <div className=\"space-y-1\">{children}</div>\n  </div>\n);\n\nconst FilterItem = ({ label, isSelected, onClick }: { label: string, isSelected: boolean, onClick: () => void }) => (\n  <button\n    onClick={onClick}\n    className={`w-full text-left px-3 py-1.5 rounded-md text-sm transition-all duration-200 border-l-2 ${\n      isSelected\n        ? 'bg-zinc-800 border-cyan-400 text-white font-semibold'\n        : 'border-transparent text-zinc-400 hover:bg-zinc-800/50 hover:text-white'\n    }`}\n  >\n    {label}\n  </button>\n);\n\nexport const FilterSidebar = ({\n  filters, priceFilter, setPriceFilter, toggleFilter, allBrands, allDriveTypes, allFuelTypes, priceMinMax, clearFilters, activeFilterCount\n}: FilterProps) => {\n\n  return (\n    <div className=\"p-4 bg-zinc-900 rounded-xl\">\n      <div className=\"flex justify-between items-center mb-2 px-1\">\n        <div className=\"flex items-center gap-2\">\n          <h3 className=\"text-lg font-bold\">Filters</h3>\n          {activeFilterCount > 0 && (\n            <span className=\"bg-cyan-400 text-black text-xs font-bold w-5 h-5 flex items-center justify-center rounded-full\">\n              {activeFilterCount}\n            </span>\n          )}\n        </div>\n        <button onClick={clearFilters} className=\"text-xs font-semibold text-cyan-400 hover:underline\">Clear All</button>\n      </div>\n\n      <FilterSection title=\"Brand\">\n        {allBrands.map(brand => (\n          <FilterItem key={brand} label={brand} isSelected={filters.brands.includes(brand)} onClick={() => toggleFilter('brands', brand)} />\n        ))}\n      </FilterSection>\n\n      <FilterSection title=\"Drivetrain\">\n        {allDriveTypes.map(drive => (\n          <FilterItem key={drive} label={drive} isSelected={filters.driveTypes.includes(drive)} onClick={() => toggleFilter('driveTypes', drive)} />\n        ))}\n      </FilterSection>\n\n      <FilterSection title=\"Fuel Type\">\n        {allFuelTypes.map(fuel => (\n          <FilterItem key={fuel} label={fuel} isSelected={filters.fuelTypes.includes(fuel)} onClick={() => toggleFilter('fuelTypes', fuel)} />\n        ))}\n      </FilterSection>\n\n      <div className=\"py-4 border-t border-zinc-800\">\n          <h3 className=\"font-semibold text-white mb-4 px-1\">Price Range</h3>\n          <div className=\"px-2\">\n            <Slider\n              range min={priceMinMax[0]} max={priceMinMax[1]} value={priceFilter}\n              onChange={(value) => setPriceFilter(value as [number, number])}\n              step={500} allowCross={false}\n              trackStyle={{ backgroundColor: '#22d3ee', height: 4 }}\n              handleStyle={{ borderColor: '#22d3ee', backgroundColor: '#0A0A0A', height: 18, width: 18, opacity: 1, borderWidth: 2 }}\n              railStyle={{ backgroundColor: '#3f3f46', height: 4 }}\n            />\n            <div className=\"flex justify-between text-xs text-gray-400 mt-2\">\n              <span>₹{priceFilter[0].toLocaleString()}</span>\n              <span>₹{priceFilter[1].toLocaleString()}</span>\n            </div>\n          </div>\n      </div>\n    </div>\n  );\n};","usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/components/FleetShowcase.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/components/Footer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/components/HeroSection.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'session' is assigned a value but never used.","line":133,"column":17,"nodeType":null,"messageId":"unusedVar","endLine":133,"endColumn":24}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// \"use client\";\n\n// import { motion } from \"framer-motion\";\n// import { ArrowRight, Car, CalendarCheck, Headset } from \"lucide-react\";\n// import Link from \"next/link\";\n\n// const FADE_UP_ANIMATION_VARIANTS = {\n//   hidden: { opacity: 0, y: 10 },\n//   visible: { opacity: 1, y: 0, transition: { type: \"spring\" } },\n// };\n\n// const HeroSection = () => {\n//   return (\n//     <section className=\"relative h-screen w-full flex items-center justify-center overflow-hidden\">\n//       <video\n//         autoPlay\n//         loop\n//         muted\n//         playsInline\n//         className=\"absolute z-0 w-full h-full object-cover\"\n//       >\n//         <source src=\"/herovid.mp4\" type=\"video/mp4\" />\n//         Your browser does not support the video tag.\n//       </video>\n\n//       <div className=\"absolute inset-0 z-10 bg-gradient-to-t from-black via-black/60 to-transparent\" />\n\n//       <div className=\"relative z-20 flex flex-col items-center text-center text-white px-4\">\n//         <motion.div\n//           initial=\"hidden\"\n//           animate=\"visible\"\n//           variants={{\n//             visible: { transition: { staggerChildren: 0.25 } },\n//           }}\n//           className=\"flex flex-col items-center\"\n//         >\n//           <motion.h1\n//             variants={FADE_UP_ANIMATION_VARIANTS}\n//             className=\"text-4xl md:text-6xl lg:text-7xl font-extrabold tracking-tight\"\n//           >\n//             Unleash Your <span className=\"text-cyan-400\">Journey</span>\n//           </motion.h1>\n\n//           <motion.p\n//             variants={FADE_UP_ANIMATION_VARIANTS}\n//             className=\"mt-6 max-w-2xl text-lg text-gray-200\"\n//           >\n//             Go beyond transportation. Rent an experience. Our curated fleet is ready for your next adventure.\n//           </motion.p>\n\n//           <motion.div\n//             variants={FADE_UP_ANIMATION_VARIANTS}\n//             className=\"mt-10 flex flex-col sm:flex-row items-center gap-4\"\n//           >\n//             <Link\n//               href=\"/cars\"\n//               className=\"group flex w-full sm:w-auto items-center justify-center gap-2 rounded-md bg-cyan-400 px-8 py-3 text-base font-semibold text-zinc-900 transition-transform hover:scale-105\"\n//             >\n//               Browse The Fleet\n//               <ArrowRight className=\"h-5 w-5 transition-transform group-hover:translate-x-1\" />\n//             </Link>\n//             <Link\n//               href=\"/how-it-works\"\n//               className=\"w-full sm:w-auto text-center rounded-md border border-white/50 px-8 py-3 text-base font-semibold text-white backdrop-blur-sm transition-colors hover:bg-white/10\"\n//             >\n//               How It Works\n//             </Link>\n//           </motion.div>\n//         </motion.div>\n//       </div>\n\n//       <motion.div\n//         initial={{ opacity: 0, y: 20 }}\n//         animate={{ opacity: 1, y: 0 }}\n//         transition={{ duration: 0.5, delay: 1.2 }}\n//         className=\"absolute bottom-0 left-0 w-full z-20 bg-black/20 backdrop-blur-sm\"\n//       >\n//         <div className=\"container mx-auto grid grid-cols-1 md:grid-cols-3 gap-4 text-center py-6 px-4 text-white\">\n//           <div className=\"flex items-center justify-center gap-3\">\n//             <Car className=\"h-7 w-7 text-cyan-300\" />\n//             <span className=\"font-medium\">Premium Fleet Selection</span>\n//           </div>\n//           <div className=\"flex items-center justify-center gap-3\">\n//             <CalendarCheck className=\"h-7 w-7 text-cyan-300\" />\n//             <span className=\"font-medium\">Seamless Booking Process</span>\n//           </div>\n//           <div className=\"flex items-center justify-center gap-3\">\n//             <Headset className=\"h-7 w-7 text-cyan-300\" />\n//             <span className=\"font-medium\">24/7 VIP Concierge</span>\n//           </div>\n//         </div>\n//       </motion.div>\n//     </section>\n//   );\n// };\n\n// export default HeroSection;\n\n\n// src/components/HeroSection.tsx\n\n\"use client\";\n\nimport { useSession } from \"next-auth/react\";\nimport { motion } from \"framer-motion\";\nimport { ArrowRight, Car, CalendarCheck, Headset, ChevronDown } from \"lucide-react\";\nimport Link from \"next/link\";\n\n// Animation variants for the headline words\nconst wordAnimation = {\n  hidden: { opacity: 0, y: 20 },\n  visible: (i: number) => ({\n    opacity: 1,\n    y: 0,\n    transition: {\n      delay: i * 0.1,\n      type: \"spring\",\n      stiffness: 100,\n      damping: 20,\n    },\n  }),\n};\n\n// Animation variants for other elements\nconst fadeUp = {\n  hidden: { opacity: 0, y: 10 },\n  visible: { opacity: 1, y: 0, transition: { duration: 0.5, ease: \"easeOut\" } },\n};\n\nconst HeroSection = () => {\n  const headline = \"Unleash Your Journey\";\n  const headlineWords = headline.split(\" \");\n  const { data: session, status } = useSession();\n  const isAuthenticated = status === \"authenticated\";\n\n  const fleetLink = isAuthenticated\n    ? \"/cars\"\n    : \"/signin?callbackUrl=/cars\";\n\n  const features = [\n    { icon: <Car className=\"h-7 w-7 text-cyan-300\" />, text: \"Premium Fleet Selection\" },\n    { icon: <CalendarCheck className=\"h-7 w-7 text-cyan-300\" />, text: \"Seamless Booking Process\" },\n    { icon: <Headset className=\"h-7 w-7 text-cyan-300\" />, text: \"24/7 VIP Concierge\" },\n  ];\n\n  return (\n    <section className=\"relative h-screen w-full flex items-center justify-center overflow-hidden font-sans\">\n      {/* Background Video */}\n      <video\n        autoPlay\n        loop\n        muted\n        playsInline\n        className=\"absolute z-0 w-auto min-w-full min-h-full max-w-none\"\n      >\n        <source src=\"/herovid.mp4\" type=\"video/mp4\" />\n        Your browser does not support the video tag.\n      </video>\n\n      {/* Cinematic Gradient Overlay */}\n      <div className=\"absolute inset-0 z-10 bg-radial-gradient-hero\" />\n\n      {/* Main Content */}\n      <div className=\"relative z-20 flex flex-col items-center text-center text-white px-4\">\n        <motion.h1\n          initial=\"hidden\"\n          animate=\"visible\"\n          className=\"text-5xl md:text-7xl lg:text-8xl font-extrabold tracking-tighter font-display\"\n        >\n          {headlineWords.map((word, i) => (\n            <motion.span\n              key={i}\n              custom={i}\n              variants={wordAnimation}\n              className={`inline-block mr-4 ${word === \"Journey\" ? \"text-cyan-400\" : \"\"}`}\n            >\n              {word}\n            </motion.span>\n          ))}\n        </motion.h1>\n\n        <motion.p\n          variants={fadeUp}\n          initial=\"hidden\"\n          animate=\"visible\"\n          transition={{ delay: 0.8 }}\n          className=\"mt-6 max-w-2xl text-lg text-gray-300 tracking-wide\"\n        >\n          Go beyond transportation. Rent an experience. Our curated fleet is ready for your next adventure.\n        </motion.p>\n\n        <motion.div\n          variants={fadeUp}\n          initial=\"hidden\"\n          animate=\"visible\"\n          transition={{ delay: 1.0 }}\n          className=\"mt-10 flex flex-col sm:flex-row items-center gap-4\"\n        >\n            <Link\n                href={fleetLink}\n                className=\"group flex w-full sm:w-auto items-center justify-center gap-2 rounded-lg bg-gradient-to-r from-cyan-400 to-teal-400 px-8 py-3 text-base font-bold text-zinc-900 transition-all duration-300 hover:shadow-cyan-glow hover:-translate-y-1\"\n            >\n                Browse The Fleet\n                <ArrowRight className=\"h-5 w-5 transition-transform group-hover:translate-x-1\" />\n            </Link>\n          <Link\n            href=\"/how-it-works\"\n            className=\"w-full sm:w-auto text-center rounded-lg border border-white/30 bg-white/10 px-8 py-3 text-base font-semibold text-white backdrop-blur-sm transition-colors hover:bg-white/20 hover:border-white/50\"\n          >\n            How It Works\n          </Link>\n        </motion.div>\n      </div>\n\n      <div className=\"absolute bottom-0 w-full z-20 pb-6\">\n        <div className=\"container mx-auto grid grid-cols-1 md:grid-cols-3 gap-6 px-6\">\n          {features.map((feature, i) => (\n            <motion.div\n              key={i}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 1.2 + i * 0.1 }}\n              className=\"flex items-center justify-center gap-4 p-4 rounded-xl bg-black/20 backdrop-blur-md border border-white/10\"\n            >\n              {feature.icon}\n              <span className=\"font-medium text-white\">{feature.text}</span>\n            </motion.div>\n          ))}\n        </div>\n      </div>\n      \n       <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ delay: 2.0 }}\n          className=\"absolute bottom-24 md:bottom-32 z-20\"\n        >\n          <ChevronDown className=\"h-8 w-8 text-white/50 animate-bounce\" />\n       </motion.div>\n    </section>\n  );\n};\n\nexport default HeroSection;","usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/components/LocationPicker.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'allCityNames' is assigned a value but never used.","line":33,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":33,"endColumn":19}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\n\nimport { Dialog, Transition } from '@headlessui/react';\nimport { Fragment, useState, useMemo } from 'react';\nimport { X, Search } from 'lucide-react';\nimport Image from 'next/image';\n\n// --- FIX #1: Import the SVG files as objects with a 'src' property. ---\nimport bangaloreIconSrc from '@/assets/icons/Bangalore.svg';\nimport chennaiIconSrc from '@/assets/icons/Chennai.svg';\nimport delhiIconSrc from '@/assets/icons/Delhi.svg';\nimport goaIconSrc from '@/assets/icons/Goa.svg';\nimport hyderabadIconSrc from '@/assets/icons/Hyderabad.svg';\nimport jaipurIconSrc from '@/assets/icons/Jaipur.svg';\nimport mumbaiIconSrc from '@/assets/icons/Mumbai.svg';\nimport kolkataIconSrc from '@/assets/icons/Kolkata.svg';\nimport puneIconSrc from '@/assets/icons/Pune.svg';\nimport vizagIconSrc from '@/assets/icons/Vizag.svg';\n\nconst topCities = [\n    { name: 'Bengaluru', iconSrc: bangaloreIconSrc.src },\n    { name: 'Chennai', iconSrc: chennaiIconSrc.src },\n    { name: 'Delhi NCR', iconSrc: delhiIconSrc.src },\n    { name: 'Goa', iconSrc: goaIconSrc.src },\n    { name: 'Hyderabad', iconSrc: hyderabadIconSrc.src },\n    { name: 'Jaipur', iconSrc: jaipurIconSrc.src },\n    { name: 'Kolkata', iconSrc: kolkataIconSrc.src },\n    { name: 'Mumbai', iconSrc: mumbaiIconSrc.src },\n    { name: 'Pune', iconSrc: puneIconSrc.src },\n    { name: 'Vizag', iconSrc: vizagIconSrc.src },\n];\nconst otherCities = [\"Ahmedabad\", \"Chandigarh\", \"Coimbatore\", \"Indore\", \"Kochi\", \"Udaipur\", \"Mangalore\", \"Nagpur\", \"Mysore\", \"Vijayawada\"];\nconst allCityNames = [...topCities.map(c => c.name), ...otherCities].sort();\n\nconst CityButton = ({ city, onSelect }: { city: { name: string, iconSrc: string }, onSelect: (city: string) => void }) => (\n  <button onClick={() => onSelect(city.name)} className=\"flex flex-col items-center gap-2 p-2 rounded-lg text-center group hover:bg-zinc-800 transition-colors\">\n    <div className=\"w-20 h-20 flex items-center justify-center bg-zinc-300 rounded-lg text-zinc-400 border border-zinc-700 group-hover:border-cyan-400/50 transition-colors\">\n        <Image src={city.iconSrc} alt={city.name} width={40} height={40} />\n    </div>\n    <p className=\"font-semibold text-white text-sm\">{city.name}</p>\n  </button>\n);\n\nexport const LocationPicker = ({ isOpen, onClose, onSelect }: { isOpen: boolean, onClose: () => void, onSelect: (city: string) => void }) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const filteredTopCities = useMemo(() => {\n    if (!searchTerm) return topCities;\n    return topCities.filter(c => c.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  }, [searchTerm]);\n\n  const filteredOtherCities = useMemo(() => {\n    if (!searchTerm) return otherCities;\n    return otherCities.filter(c => c.toLowerCase().includes(searchTerm.toLowerCase()));\n  }, [searchTerm]);\n  \n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\n        <Transition.Child as={Fragment} enter=\"ease-out duration-300\" enterFrom=\"opacity-0\" enterTo=\"opacity-100\" leave=\"ease-in duration-200\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\n          <div className=\"fixed inset-0 bg-black/60 backdrop-blur-sm\" />\n        </Transition.Child>\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            <Transition.Child as={Fragment} enter=\"ease-out duration-300\" enterFrom=\"opacity-0 scale-95\" enterTo=\"opacity-100 scale-100\" leave=\"ease-in duration-200\" leaveFrom=\"opacity-100 scale-100\" leaveTo=\"opacity-0 scale-95\">\n              <Dialog.Panel className=\"w-full max-w-3xl transform overflow-hidden rounded-2xl bg-zinc-900 border border-zinc-700 p-6 text-left align-middle shadow-2xl shadow-black/50 transition-all\">\n                <div className=\"flex justify-between items-center\">\n                  <Dialog.Title as=\"h3\" className=\"text-xl font-bold leading-6 text-white\">Choose City</Dialog.Title>\n                  <button onClick={onClose} className=\"p-1 rounded-full hover:bg-zinc-400\"><X className='text-white' size={20} /></button>\n                </div>\n                <div className=\"mt-4 relative\">\n                    <Search className=\"absolute left-4 top-1/2 -translate-y-1/2 h-5 w-5 text-zinc-500\" />\n                    <input type=\"text\" placeholder=\"Search for city\" value={searchTerm} onChange={(e) => setSearchTerm(e.target.value)} className=\"w-full bg-zinc-800 border border-zinc-700 rounded-lg py-3 px-4 pl-12 text-white placeholder-zinc-500 focus:outline-none focus:ring-2 focus:ring-cyan-400\" />\n                </div>\n                 <div className=\"mt-6\">\n                    <h4 className=\"font-semibold text-gray-400 text-sm mb-4 tracking-wider\">TOP CITIES</h4>\n                    <div className=\"grid grid-cols-3 sm:grid-cols-4 md:grid-cols-5 gap-4\">\n                        {filteredTopCities.map(city => <CityButton key={city.name} city={city} onSelect={onSelect} />)}\n                    </div>\n                </div>\n                 <div className=\"mt-8\">\n                    <h4 className=\"font-semibold text-gray-400 text-sm mb-4 tracking-wider\">OTHER CITIES</h4>\n                    <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-x-6 gap-y-3 max-h-40 overflow-y-auto\">\n                        {filteredOtherCities.map(city => <button key={city} onClick={() => onSelect(city)} className=\"text-left text-zinc-300 hover:text-cyan-400 py-1 transition-colors\">{city}</button>)}\n                    </div>\n                </div>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  )\n}","usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/components/Logo.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/components/Navbar.tsx","messages":[{"ruleId":"react/jsx-no-undef","severity":2,"message":"'Car' is not defined.","line":101,"column":28,"nodeType":"JSXIdentifier","messageId":"undefined","endLine":101,"endColumn":31},{"ruleId":"react/jsx-no-undef","severity":2,"message":"'Car' is not defined.","line":151,"column":202,"nodeType":"JSXIdentifier","messageId":"undefined","endLine":151,"endColumn":205}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/Navbar.tsx\n\n\"use client\";\n\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { useRouter } from 'next/navigation'; // Import useRouter for navigation\nimport { Menu as MenuIcon, X, User, Settings, LogOut, Lock } from 'lucide-react';\nimport { useSession, signOut } from 'next-auth/react';\nimport { Menu } from '@headlessui/react';\nimport { motion, AnimatePresence } from 'framer-motion';\n\n// Navigation links configuration remains the same\nconst navLinks = [\n  { href: '/cars', label: 'Cars', protected: true },\n  { href: '/bikes', label: 'Bikes', protected: true },\n  { href: '/how-it-works', label: 'How It Works', protected: false },\n  { href: '/faq', label: 'FAQ', protected: false },\n];\n\nconst Navbar = () => {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const { data: session, status } = useSession();\n  const isAuthenticated = status === 'authenticated';\n  const router = useRouter(); // Initialize the router\n\n  const dropdownVariants = {\n    hidden: { opacity: 0, scale: 0.95, y: -10 },\n    visible: { opacity: 1, scale: 1, y: 0, transition: { duration: 0.2, ease: \"easeOut\" } },\n    exit: { opacity: 0, scale: 0.95, y: -10, transition: { duration: 0.15, ease: \"easeIn\" } },\n  };\n\n  // Helper functions for clean navigation\n  const handleSignIn = () => router.push('/signin');\n  const handleSignUp = () => router.push('/signup');\n\n  // Renders navigation links with correct logic\n  const renderNavLink = (link: typeof navLinks[0], isMobile = false) => {\n    if (link.protected && !isAuthenticated) {\n      // FIX: Protected links now also navigate to the sign-in page for a better UX\n      return (\n        <button key={link.href} onClick={handleSignIn} title=\"Please log in to access\" className={ isMobile ? \"py-2 text-lg text-gray-500 flex items-center gap-2\" : \"text-gray-500 cursor-not-allowed transition-colors flex items-center gap-1\" }>\n          {link.label} <Lock size={isMobile ? 16 : 12} />\n        </button>\n      );\n    }\n    return (\n      <Link key={link.href} href={link.href} onClick={() => isMobile && setIsMobileMenuOpen(false)} className={isMobile ? \"py-2 text-lg\" : \"text-gray-300 hover:text-white transition-colors\"}>\n        {link.label}\n      </Link>\n    );\n  };\n\n  return (\n    <header className=\"relative bg-zinc-900/80 backdrop-blur-sm border-b border-zinc-800 text-white font-sans z-50 sticky top-0\">\n      <nav className=\"container mx-auto px-6 py-4 flex justify-between items-center\">\n        <div className=\"flex items-center gap-10\">\n          <Link href=\"/\" className=\"text-xl font-medium tracking-wide\">\n            <span>VISION</span><span className=\"font-extrabold text-cyan-400\">DRIVE</span>\n          </Link>\n          <div className=\"hidden md:flex items-center gap-8 text-sm uppercase tracking-widest\">\n            {navLinks.map(link => renderNavLink(link))}\n          </div>\n        </div>\n\n        <div className=\"hidden md:flex items-center gap-4\">\n          {status === 'loading' && <div className=\"h-9 w-9 bg-zinc-700 rounded-full animate-pulse\"></div>}\n          \n          {status === 'unauthenticated' && (\n            <>\n              <button onClick={handleSignIn} className=\"text-sm font-semibold hover:text-cyan-400 transition-colors px-3 py-2\">\n                Log In\n              </button>\n              <button onClick={handleSignUp} className=\"bg-cyan-400 text-zinc-900 text-sm font-semibold px-4 py-2 rounded-md hover:bg-cyan-500 transition-colors\">\n                Sign Up\n              </button>\n            </>\n          )}\n\n          {isAuthenticated && (\n            <Menu as=\"div\" className=\"relative\">\n              <Menu.Button className=\"flex items-center justify-center rounded-full h-9 w-9 bg-zinc-700 ring-2 ring-transparent hover:ring-cyan-400 transition-all\">\n                {session.user?.image ? (\n                  <Image src={session.user.image} alt={session.user.name || 'User Avatar'} width={36} height={36} className=\"rounded-full\" />\n                ) : (\n                  <User size={20} className=\"text-gray-300\" />\n                )}\n              </Menu.Button>\n              <AnimatePresence>\n                <Menu.Items as={motion.div} variants={dropdownVariants} initial=\"hidden\" animate=\"visible\" exit=\"exit\" className=\"absolute right-0 mt-2 w-56 origin-top-right bg-zinc-900 border border-zinc-700 rounded-md shadow-lg focus:outline-none\">\n                  <div className=\"px-1 py-1\">\n                    <div className=\"px-4 py-2 border-b border-zinc-700 mb-1\">\n                        <p className=\"text-sm font-semibold text-white\">{session.user?.name}</p>\n                        <p className=\"text-xs text-gray-400 truncate\">{session.user?.email}</p>\n                    </div>\n                    {/* --- THIS IS THE FIX --- */}\n                    <Menu.Item>\n                      {({ active }) => (\n                        <Link href=\"/account/bookings\" className={`${active ? 'bg-zinc-700' : ''} group flex rounded-md items-center w-full px-4 py-2 text-sm text-gray-300`}>\n                          <Car className=\"mr-2 h-4 w-4\" /> My Bookings\n                        </Link>\n                      )}\n                    </Menu.Item>\n                    <Menu.Item>\n                      {({ active }) => (\n                        <Link href=\"/account/settings\" className={`${active ? 'bg-zinc-700' : ''} group flex rounded-md items-center w-full px-4 py-2 text-sm text-gray-300`}>\n                          <Settings className=\"mr-2 h-4 w-4\" /> Account Settings\n                        </Link>\n                      )}\n                    </Menu.Item>\n                    <Menu.Item>\n                      {({ active }) => (\n                        <button onClick={() => signOut()} className={`${active ? 'bg-red-500/20 text-red-400' : 'text-gray-300'} group flex rounded-md items-center w-full px-4 py-2 text-sm`}>\n                          <LogOut className=\"mr-2 h-4 w-4\" /> Sign Out\n                        </button>\n                      )}\n                    </Menu.Item>\n                  </div>\n                </Menu.Items>\n              </AnimatePresence>\n            </Menu>\n          )}\n        </div>\n\n        <div className=\"md:hidden\">\n          <button onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)} className=\"p-2\" aria-label=\"Toggle menu\">\n            {isMobileMenuOpen ? <X /> : <MenuIcon />}\n          </button>\n        </div>\n      </nav>\n      \n      <AnimatePresence>\n        {isMobileMenuOpen && (\n            <motion.div initial={{ opacity: 0, y: -20 }} animate={{ opacity: 1, y: 0 }} exit={{ opacity: 0, y: -20 }} className=\"md:hidden absolute top-full left-0 w-full bg-zinc-900/95 backdrop-blur-lg border-t border-zinc-800\">\n              <div className=\"flex flex-col gap-4 p-6\">\n                {navLinks.map(link => renderNavLink(link, true))}\n                <div className=\"border-t border-zinc-700 mt-4 pt-6\">\n                    {isAuthenticated ? (\n                        <div className=\"flex flex-col gap-4\">\n                          <div className=\"flex items-center gap-3 mb-2\">\n                              <div className=\"h-10 w-10 rounded-full bg-zinc-700 flex items-center justify-center\">\n                                {session.user?.image ? ( <Image src={session.user.image} alt=\"User\" width={40} height={40} className=\"rounded-full\" /> ) : ( <User size={24} className=\"text-gray-300\" /> )}\n                              </div>\n                              <div>\n                                  <p className=\"font-semibold\">{session.user?.name}</p>\n                                  <p className=\"text-sm text-gray-400\">{session.user?.email}</p>\n                              </div>\n                          </div>\n                          {/* --- MOBILE MENU FIX --- */}\n                          <Link href=\"/account/bookings\" onClick={() => setIsMobileMenuOpen(false)} className=\"bg-zinc-800 w-full text-left py-3 px-4 rounded-md font-semibold flex items-center gap-3\"><Car size={16}/> My Bookings</Link>\n                          <Link href=\"/account/settings\" onClick={() => setIsMobileMenuOpen(false)} className=\"bg-zinc-800 w-full text-left py-3 px-4 rounded-md font-semibold flex items-center gap-3\"><Settings size={16}/> Account Settings</Link>\n                          <button onClick={() => {signOut(); setIsMobileMenuOpen(false);}} className=\"bg-red-500/20 text-red-400 w-full text-center py-3 rounded-md font-semibold flex items-center justify-center gap-3\"><LogOut size={16}/>Sign Out</button>\n                        </div>\n                    ) : (\n                        <div className=\"flex flex-col gap-4\">\n                          <button onClick={() => {handleSignIn(); setIsMobileMenuOpen(false);}} className=\"bg-zinc-800 w-full text-center py-3 rounded-md font-semibold\">Log In</button>\n                          <button onClick={() => {handleSignUp(); setIsMobileMenuOpen(false);}} className=\"bg-cyan-400 text-zinc-900 w-full text-center py-3 rounded-md font-semibold\">Sign Up</button>\n                        </div>\n                    )}\n                </div>\n              </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </header>\n  );\n};\n\nexport default Navbar;","usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/components/ParticleBackground.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/components/StatsSection.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'motion' is defined but never used.","line":4,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":16},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":9,"column":22,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":9,"endColumn":25,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[201,204],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[201,204],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\n\nimport { useEffect, useRef } from \"react\";\nimport { motion, useInView, animate } from \"framer-motion\";\n\ntype AnimatedCounterProps = {\n  from?: number;\n  to: number;\n  animationOptions?: any;\n  suffix?: string;\n  className?: string;\n};\n\nconst AnimatedCounter = ({ from = 0, to, animationOptions, suffix = \"\", className }: AnimatedCounterProps) => {\n  const ref = useRef<HTMLSpanElement>(null);\n  const inView = useInView(ref, { once: true });\n\n  useEffect(() => {\n    if (inView && ref.current) {\n      const controls = animate(from, to, {\n        duration: 2,\n        ease: \"easeOut\",\n        ...animationOptions,\n        onUpdate(value) {\n          if (ref.current) {\n            ref.current.textContent = value.toFixed(0);\n          }\n        },\n      });\n      return () => controls.stop();\n    }\n  }, [inView, from, to, animationOptions]);\n\n  return (\n    <span className={className}>\n      <span ref={ref}>{from}</span>\n      {suffix}\n    </span>\n  );\n};\n\nconst StatCard = ({ children }: { children: React.ReactNode }) => (\n  <div className=\"relative flex flex-col items-center justify-center p-8 text-center\">\n    <div className=\"absolute top-0 left-0 w-8 h-8 border-l-2 border-t-2 border-gray-700\"></div>\n    <div className=\"absolute top-0 right-0 w-8 h-8 border-r-2 border-t-2 border-gray-700\"></div>\n    <div className=\"absolute bottom-0 left-0 w-8 h-8 border-l-2 border-b-2 border-gray-700\"></div>\n    <div className=\"absolute bottom-0 right-0 w-8 h-8 border-r-2 border-b-2 border-gray-700\"></div>\n    {children}\n  </div>\n);\n\n\nconst StatsSection = () => {\n  const stats = [\n    { value: 12, suffix: \"\", text: \"Years on the rental market\" },\n    { value: 50, suffix: \"+\", text: \"Luxury vehicles in our fleet\" },\n    { value: 15, suffix: \"M\", text: \"Dollars value of our fleet\" },\n  ];\n\n  return (\n    <section className=\"bg-zinc-900 text-white py-24 sm:py-32\">\n      <div className=\"container mx-auto px-6\">\n        \n        <div className=\"mb-20\">\n          <p className=\"text-center text-gray-400 text-xs uppercase tracking-[0.2em] mb-12\">\n            [ ESTABLISHED & TRUSTED ]\n          </p>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {stats.map((stat, index) => (\n              <StatCard key={index}>\n                <AnimatedCounter \n                  to={stat.value}\n                  suffix={stat.suffix}\n                  className=\"font-mono text-5xl md:text-7xl font-bold italic text-cyan-400\"\n                />\n                <p className=\"mt-2 text-gray-400 text-sm\">{stat.text}</p>\n              </StatCard>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"text-center\">\n          <p className=\"text-gray-400 text-xs uppercase tracking-[0.2em] mb-8\">\n            [ LUXURY & EXOTIC CAR RENTALS ]\n          </p>\n          <h2 className=\"text-4xl md:text-6xl font-bold italic\">\n            RENT. RIDE.{\" \"}\n            <span className=\"bg-cyan-400 text-zinc-900 px-4 py-1 rounded-md\">\n              ENJOY.\n            </span>\n          </h2>\n          <p className=\"mt-6 max-w-2xl mx-auto text-gray-300\">\n            Luxury rentals are more than just making a statement; they are about experiencing the very best that life has to offer.\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default StatsSection;","usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/components/auth/NotificationCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/components/icons/GoogleIcon.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/components/layouts/AuthLayout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/components/ui/button.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/components/ui/calendar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/lib/carsData.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/lib/mongodb.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/lib/utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/akashsingh/visiondrive/src/models/User.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]